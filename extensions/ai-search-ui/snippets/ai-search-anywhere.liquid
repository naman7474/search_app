{% comment %}
  AI Search Anywhere Snippet
  
  Universal search replacement that works with any Shopify theme.
  
  Usage:
  {% render 'ai-search-anywhere' %}
  
  Or with options:
  {% render 'ai-search-anywhere', 
      placeholder: 'Search our store...', 
      enable_voice: true,
      enable_realtime: true,
      max_results: 10 %}
{% endcomment %}

<!-- Universal AI Search Implementation -->
<div class="ai-search-universal" 
     data-search-universal="true"
     data-placeholder="{{ placeholder | default: 'Search for products...' }}"
     data-enable-voice="{{ enable_voice | default: false }}"
     data-enable-realtime="{{ enable_realtime | default: true }}"
     data-max-results="{{ max_results | default: 10 }}"
     data-shop-domain="{{ shop.permanent_domain }}">

  <!-- Load Progressive Enhancement Scripts -->
  {% unless request.design_mode %}
    <script>
      // Load scripts asynchronously to avoid blocking
      (function() {
        const loadScript = (src, onload) => {
          const script = document.createElement('script');
          script.src = src;
          script.async = true;
          script.onload = onload;
          script.onerror = () => console.warn('Failed to load:', src);
          document.head.appendChild(script);
        };

        // Load enhancement scripts in order
        loadScript('{{ "progressive-enhancement.js" | asset_url }}', () => {
          loadScript('{{ "search-interceptor.js" | asset_url }}', () => {
            // Initialize after both scripts are loaded
            if (typeof window.SearchEnhancer !== 'undefined') {
              window.SearchEnhancer.init();
            }
            if (typeof window.AISearchInterceptor !== 'undefined') {
              window.AISearchInterceptor.init();
            }
          });
        });
      })();
    </script>
  {% endunless %}

  <!-- Fallback CSS for themes without modern features -->
  <style>
    .ai-search-universal {
      position: relative;
      width: 100%;
    }
    
    /* Ensure original search forms work */
    .ai-search-universal form[action*="/search"] {
      position: relative;
    }
    
    /* Hide enhanced features if JS fails */
    .no-js .ai-search-enhanced,
    .ai-search-fallback-mode .ai-search-enhanced {
      display: none !important;
    }
    
    .no-js .ai-search-fallback,
    .ai-search-fallback-mode .ai-search-fallback {
      display: block !important;
    }

    /* Responsive behavior */
    @media (max-width: 768px) {
      .ai-search-universal input[type="search"] {
        font-size: 16px; /* Prevent iOS zoom */
      }
    }

    /* Accessibility improvements */
    .ai-search-universal input:focus {
      outline: 2px solid #007cba;
      outline-offset: 2px;
    }

    @media (prefers-reduced-motion: reduce) {
      .ai-search-universal * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }
    }

    /* High contrast mode */
    @media (prefers-contrast: high) {
      .ai-search-universal input,
      .ai-search-universal button {
        border: 2px solid;
      }
    }
  </style>

  <!-- Progressive Enhancement Detection -->
  <script>
    // Add class to prevent FOUC (Flash of Unstyled Content)
    document.documentElement.classList.remove('no-js');
    document.documentElement.classList.add('js');
  </script>

  <!-- Enhanced Search Interface -->
  <div class="ai-search-enhanced" style="display: none;">
    <!-- Will be populated by JavaScript -->
  </div>

  <!-- Fallback Search Interface -->
  <div class="ai-search-fallback">
    <!-- Basic search form that works without JavaScript -->
    <form action="/search" method="get" role="search" class="search-form">
      <div style="display: flex; position: relative;">
        <label for="ai-search-fallback-input-{{ section.id | default: 'default' }}" class="visually-hidden">
          Search products
        </label>
        <input type="search" 
               id="ai-search-fallback-input-{{ section.id | default: 'default' }}"
               name="q" 
               placeholder="{{ placeholder | default: 'Search for products...' }}"
               autocomplete="off"
               style="flex: 1; padding: 12px 50px 12px 16px; 
                      border: 1px solid #ddd; 
                      border-radius: 4px 0 0 4px;
                      font-size: 16px;
                      min-width: 0;">
        <button type="submit" 
                style="padding: 12px 16px; 
                       background: #333; 
                       color: white; 
                       border: none; 
                       border-radius: 0 4px 4px 0;
                       cursor: pointer;
                       font-size: 14px;"
                aria-label="Search">
          <svg width="16" height="16" viewBox="0 0 24 24" fill="currentColor" aria-hidden="true">
            <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
          </svg>
        </button>
      </div>
    </form>
  </div>

  <!-- Loading State -->
  <div class="ai-search-loading" style="display: none; text-align: center; padding: 20px;">
    <div style="display: inline-block; width: 20px; height: 20px; 
                border: 2px solid #f3f3f3; border-top: 2px solid #333; 
                border-radius: 50%; animation: spin 1s linear infinite;"
         aria-hidden="true"></div>
    <div style="margin-top: 8px; font-size: 14px; color: #666;">
      Searching with AI...
    </div>
  </div>

  <!-- No-Script Warning -->
  <noscript>
    <div style="background: #fff3cd; border: 1px solid #ffeaa7; padding: 12px; margin: 10px 0; border-radius: 4px;">
      <p style="margin: 0; font-size: 14px; color: #856404;">
        <strong>Note:</strong> For the best search experience, please enable JavaScript. 
        Basic search is available above.
      </p>
    </div>
  </noscript>

</div>

<!-- Initialize Universal Search -->
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchContainer = document.querySelector('[data-search-universal]');
    if (!searchContainer) return;

    // Configuration from data attributes
    const config = {
      placeholder: searchContainer.dataset.placeholder,
      enableVoice: searchContainer.dataset.enableVoice === 'true',
      enableRealtime: searchContainer.dataset.enableRealtime === 'true',
      maxResults: parseInt(searchContainer.dataset.maxResults) || 10,
      shopDomain: searchContainer.dataset.shopDomain
    };

    // Initialize enhanced search when scripts are ready
    const initializeEnhanced = () => {
      if (typeof window.SearchEnhancer !== 'undefined' && 
          typeof window.AISearchInterceptor !== 'undefined') {
        
        // Configure interceptor
        Object.assign(window.AISearchInterceptor.config || {}, config);
        
        // Show enhanced interface
        const enhanced = searchContainer.querySelector('.ai-search-enhanced');
        const fallback = searchContainer.querySelector('.ai-search-fallback');
        
        if (enhanced && fallback) {
          enhanced.style.display = 'block';
          fallback.style.display = 'none';
        }
        
        console.log('[AI Search] Universal search initialized with config:', config);
      } else {
        // Retry in a moment
        setTimeout(initializeEnhanced, 100);
      }
    };

    // Start initialization
    initializeEnhanced();

    // Handle search form hijacking for existing forms
    const existingForms = document.querySelectorAll('form[action*="/search"]:not([data-ai-search-hijacked])');
    existingForms.forEach(form => {
      // Mark as processed
      form.setAttribute('data-ai-search-hijacked', 'pending');
      
      // Wait for interceptor to load
      const hijackForm = () => {
        if (typeof window.AISearchInterceptor !== 'undefined' && 
            window.AISearchInterceptor.hijackForm) {
          window.AISearchInterceptor.hijackForm(form);
        } else {
          setTimeout(hijackForm, 100);
        }
      };
      hijackForm();
    });
  });
</script>

<!-- Accessibility helper styles -->
<style>
  .visually-hidden {
    position: absolute !important;
    clip: rect(1px, 1px, 1px, 1px) !important;
    padding: 0 !important;
    border: 0 !important;
    height: 1px !important;
    width: 1px !important;
    overflow: hidden !important;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
</style> 